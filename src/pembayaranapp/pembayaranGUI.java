/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pembayaranapp;

import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.SQLException;
import java.sql.Date;
import java.time.LocalDate;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import java.text.DecimalFormat;

public class pembayaranGUI extends javax.swing.JFrame {

    private String originalNomorInduk = "";

    /** Creates new form pembayaranGUI */
    public pembayaranGUI() {
        initComponents();
        tampilkanData();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmbBulan;
    private javax.swing.JComboBox<String> cmbKelas;
    private javax.swing.JComboBox<String> cmbPembayaran;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtNama;
    // End of variables declaration//GEN-END:variables

    /** This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtJumlah = new javax.swing.JTextField();
        cmbPembayaran = new javax.swing.JComboBox<>();
        cmbBulan = new javax.swing.JComboBox<>();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cmbKelas = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); 
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SISTEM PEMBAYARAN SPP SMP JAKENAN");

        jLabel2.setText("Nomor Induk Siswa");
        jLabel3.setText("Kelas");
        jLabel4.setText("Pembayaran");
        jLabel5.setText("Nama Siswa");
        jLabel6.setText("Bulan");
        jLabel7.setText("Jumlah (Rp)");

        txtID.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        cmbPembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "Tunai", "BCA" }));
        cmbBulan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "Desember" }));
        cmbKelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih", "7", "8", "9" }));

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(evt -> btnSimpanActionPerformed(evt));

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(evt -> btnHapusActionPerformed(evt));

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(evt -> btnUbahActionPerformed(evt));

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(evt -> btnCetakActionPerformed(evt));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "ID Pembayaran", "Nomor Induk", "Nama Siswa", "Kelas", "Bulan", "Pembayaran", "Jumlah"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 878, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                    .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSimpan)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btnCetak, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtID)
                    .addComponent(txtNama)
                    .addComponent(cmbKelas, 0, 293, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbPembayaran, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtJumlah)
                    .addComponent(cmbBulan, 0, 281, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                // Baris 1: Nomor Induk & Bulan
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cmbBulan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                // Baris 2: Nama Siswa & Jumlah
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                // Baris 3: Kelas & Pembayaran
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmbPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                // Baris 4: Tombol
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSimpan)
                    .addComponent(btnHapus)
                    .addComponent(btnUbah)
                    .addComponent(btnCetak))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // ===== EVENT UNTUK MENGISI FORM SAAT BARIS TABEL DI-KLIK =====
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {                                     
        int baris = jTable1.getSelectedRow();
        if (baris != -1) {
            // Kolom: [0:ID Pembayaran, 1:Nomor Induk, 2:Nama, 3:Kelas, 4:Bulan, 5:Pembayaran, 6:Jumlah]
            originalNomorInduk = jTable1.getValueAt(baris, 1).toString();
            txtID.setText(originalNomorInduk);
            txtNama.setText(jTable1.getValueAt(baris, 2).toString());
            cmbKelas.setSelectedItem(jTable1.getValueAt(baris, 3).toString());
            cmbBulan.setSelectedItem(jTable1.getValueAt(baris, 4).toString());
            cmbPembayaran.setSelectedItem(jTable1.getValueAt(baris, 5).toString());
            txtJumlah.setText(jTable1.getValueAt(baris, 6).toString());
        }
    }                                    

    // ====================== TOMBOL CRUD & CETAK ======================
    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            Connection conn = Koneksi.getConnection();
            
            // Cek apakah siswa sudah ada berdasarkan nomor_induk
            String cekSiswa = "SELECT id FROM siswa WHERE nomor_induk = ?";
            PreparedStatement cekPst = conn.prepareStatement(cekSiswa);
            cekPst.setString(1, txtID.getText().trim());
            ResultSet cekRs = cekPst.executeQuery();
            int siswaId = -1;
            if (cekRs.next()) {
                siswaId = cekRs.getInt("id");
            } else {
                // Insert siswa baru
                String sqlSiswa = "INSERT INTO siswa (nomor_induk, nama, kelas) VALUES (?, ?, ?)";
                PreparedStatement pstSiswa = conn.prepareStatement(sqlSiswa, Statement.RETURN_GENERATED_KEYS);
                pstSiswa.setString(1, txtID.getText().trim());
                pstSiswa.setString(2, txtNama.getText().trim());
                pstSiswa.setString(3, cmbKelas.getSelectedItem().toString());
                pstSiswa.executeUpdate();
                ResultSet generatedKeys = pstSiswa.getGeneratedKeys();
                if (generatedKeys.next()) {
                    siswaId = generatedKeys.getInt(1);
                }
            }
            
            // Insert pembayaran
            String sqlPembayaran = "INSERT INTO pembayaran (siswa_id, jumlah, bulan_dibayar, metode_pembayaran, tanggal_bayar) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement pstPembayaran = conn.prepareStatement(sqlPembayaran);
            pstPembayaran.setInt(1, siswaId);
            pstPembayaran.setDouble(2, Double.parseDouble(txtJumlah.getText().trim()));
            pstPembayaran.setString(3, cmbBulan.getSelectedItem().toString());
            pstPembayaran.setString(4, cmbPembayaran.getSelectedItem().toString());
            pstPembayaran.setDate(5, Date.valueOf(LocalDate.now()));
            
            pstPembayaran.executeUpdate();
            JOptionPane.showMessageDialog(this, "Data berhasil disimpan!");
            tampilkanData(); 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan: " + e.getMessage());
        }
    }

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {
        int baris = jTable1.getSelectedRow();
        if (baris == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus!");
            return;
        }
        
        String idPembayaran = jTable1.getValueAt(baris, 0).toString(); // kolom 0: ID Pembayaran
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", 
                JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Connection conn = Koneksi.getConnection();
                String sql = "DELETE FROM pembayaran WHERE id = ?";
                PreparedStatement pst = conn.prepareStatement(sql);
                pst.setString(1, idPembayaran);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
                tampilkanData();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal menghapus: " + e.getMessage());
            }
        }
    }

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {
        int baris = jTable1.getSelectedRow();
        if (baris == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah!");
            return;
        }
        
        // Ambil data input form
        String nomorIndukBaru = txtID.getText().trim();
        String namaSiswa = txtNama.getText().trim();
        String kelas = cmbKelas.getSelectedItem().toString().trim();
        String bulan = cmbBulan.getSelectedItem().toString().trim();
        String pembayaran = cmbPembayaran.getSelectedItem().toString().trim();
        String jumlah = txtJumlah.getText().trim();
        
        // Kolom 0 di tabel = ID Pembayaran
        String idPembayaran = jTable1.getValueAt(baris, 0).toString();
        
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Apakah Anda yakin ingin mengubah data ini?", "Konfirmasi", 
                JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                Connection conn = Koneksi.getConnection();
                
                // Update data siswa menggunakan originalNomorInduk sebagai identifikasi
                String sqlSiswa = "UPDATE siswa SET nomor_induk = ?, nama = ?, kelas = ? WHERE nomor_induk = ?";
                PreparedStatement pstSiswa = conn.prepareStatement(sqlSiswa);
                pstSiswa.setString(1, nomorIndukBaru);
                pstSiswa.setString(2, namaSiswa);
                pstSiswa.setString(3, kelas);
                pstSiswa.setString(4, originalNomorInduk);
                pstSiswa.executeUpdate();
                
                // Update data pembayaran menggunakan idPembayaran
                String sqlPembayaran = "UPDATE pembayaran SET jumlah = ?, bulan_dibayar = ?, metode_pembayaran = ?, tanggal_bayar = ? WHERE id = ?";
                PreparedStatement pstPembayaran = conn.prepareStatement(sqlPembayaran);
                pstPembayaran.setDouble(1, Double.parseDouble(jumlah));
                pstPembayaran.setString(2, bulan);
                pstPembayaran.setString(3, pembayaran);
                pstPembayaran.setDate(4, Date.valueOf(LocalDate.now()));
                pstPembayaran.setString(5, idPembayaran);
                
                int rowsAffected = pstPembayaran.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Data berhasil diubah!");
                    tampilkanData();
                } else {
                    JOptionPane.showMessageDialog(this, "Gagal mengubah data. Data tidak ditemukan.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal mengubah data: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            Connection conn = Koneksi.getConnection();
            InputStream reportPath = getClass().getResourceAsStream("/pembayaranapp/Cetak_Laporan.jasper");
            if (reportPath == null) {
                JOptionPane.showMessageDialog(this, "Laporan tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            HashMap<String, Object> parameters = new HashMap<>();
            JasperPrint print = JasperFillManager.fillReport(reportPath, parameters, conn);
            JasperViewer.viewReport(print, false);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Gagal mencetak laporan: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    // ====== Kosong, jika dibutuhkan event lain ======
    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {}
    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {}
    private void cmbBulanActionPerformed(java.awt.event.ActionEvent evt) {}
    private void cmbKelasActionPerformed(java.awt.event.ActionEvent evt) {}

    // ====== Method untuk menampilkan data ke Tabel ======
    private void tampilkanData() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear tabel lama
    
        try {
            Connection conn = Koneksi.getConnection();
            String sql = "SELECT p.id AS pembayaran_id, s.nomor_induk, s.nama, s.kelas, "
                       + "p.bulan_dibayar, p.metode_pembayaran, p.jumlah "
                       + "FROM pembayaran p JOIN siswa s ON p.siswa_id = s.id";
            Statement stmt = conn.createStatement();
            ResultSet res = stmt.executeQuery(sql);
            
            // Buat objek DecimalFormat dengan pola yang diinginkan
            DecimalFormat df = new DecimalFormat("#,###");
    
            while (res.next()) {
                double jumlah = res.getDouble("jumlah");
                String formattedJumlah = df.format(jumlah);
                
                model.addRow(new Object[]{
                    res.getString("pembayaran_id"),
                    res.getString("nomor_induk"),
                    res.getString("nama"),
                    res.getString("kelas"),
                    res.getString("bulan_dibayar"),
                    res.getString("metode_pembayaran"),
                    formattedJumlah
                });
            }
            model.fireTableDataChanged();
        } catch (SQLException e) {
            System.out.println("Error menampilkan data: " + e.getMessage());
        }
    }

    // ====== MAIN METHOD ======
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : 
                 javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pembayaranGUI.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pembayaranGUI.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pembayaranGUI.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pembayaranGUI.class.getName())
                .log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new pembayaranGUI().setVisible(true);
        });
    }
}